import sqlite3
import os
from datetime import datetime

# Database setup
DB_FILE = 'tasks.db'

def init_db():
    if not os.path.exists(DB_FILE):
        conn = sqlite3.connect(DB_FILE)
        c = conn.cursor()
        c.execute('''CREATE TABLE tasks (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        title TEXT NOT NULL,
                        priority TEXT NOT NULL,
                        due_date TEXT,
                        completed BOOLEAN NOT NULL CHECK (completed IN (0, 1))
                    )''')
        conn.commit()
        conn.close()

def add_task(title, priority, due_date):
    conn = sqlite3.connect(DB_FILE)
    c = conn.cursor()
    c.execute('INSERT INTO tasks (title, priority, due_date, completed) VALUES (?, ?, ?, ?)',
              (title, priority, due_date, False))
    conn.commit()
    conn.close()

def remove_task(task_id):
    conn = sqlite3.connect(DB_FILE)
    c = conn.cursor()
    c.execute('DELETE FROM tasks WHERE id = ?', (task_id,))
    conn.commit()
    conn.close()

def mark_task_completed(task_id):
    conn = sqlite3.connect(DB_FILE)
    c = conn.cursor()
    c.execute('UPDATE tasks SET completed = ? WHERE id = ?', (True, task_id))
    conn.commit()
    conn.close()

def list_tasks():
    conn = sqlite3.connect(DB_FILE)
    c = conn.cursor()
    c.execute('SELECT id, title, priority, due_date, completed FROM tasks')
    tasks = c.fetchall()
    conn.close()
    return tasks

def main():
    init_db()
    while True:
        print("\nTo-Do List Application")
        print("1. Add Task")
        print("2. Remove Task")
        print("3. Mark Task as Completed")
        print("4. List Tasks")
        print("5. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == '1':
            title = input("Enter task title: ")
            priority = input("Enter task priority (High, Medium, Low): ")
            due_date = input("Enter due date (YYYY-MM-DD) or leave empty: ")
            add_task(title, priority, due_date)
            print("Task added successfully.")
        
        elif choice == '2':
            task_id = int(input("Enter task ID to remove: "))
            remove_task(task_id)
            print("Task removed successfully.")
        
        elif choice == '3':
            task_id = int(input("Enter task ID to mark as completed: "))
            mark_task_completed(task_id)
            print("Task marked as completed.")
        
        elif choice == '4':
            tasks = list_tasks()
            print("\nTask List:")
            for task in tasks:
                status = "Completed" if task[4] else "Pending"
                print(f"ID: {task[0]}, Title: {task[1]}, Priority: {task[2]}, Due Date: {task[3]}, Status: {status}")
        
        elif choice == '5':
            break
        
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
